
// 代入演算子
let i = 0;

// 算術演算
i = 10 + 3;     // → 13
i = 10 - 3;     // → 7
i = 10 * 3;     // → 30
i = 10 / 3;     // → 3.3333333333333335
i = 10 % 3;     // → 1
i = 10 ** 3;    // → 1000

// 代入＋算術演算
console.log(i); // → 1000
i += 3;         // → 1003
i -= 3;         // → 1000
i *= 3;         // → 3000
i /= 3;         // → 1000
i %= 3;         // → 1

// インクリメント、デクリメント
i = 1;
console.log(++i); // → 2;
i = 1;
console.log(i++); // → 1;
i = 1;
console.log(--i); // → 0;
i = 1;
console.log(i--); // → 1;

// ----------------------------------------------------------------------------

// 文字列の連結
i = 'abc' + 'def';
console.log(i); // → abcdef

// ----------------------------------------------------------------------------

// 論理演算
i = !true;         // → false
i = 1 == 1;        // → true
i = 1 != 1;        // → false
i = 1 === 1;       // → true
i = 1 !== 1;       // → false
i = 1 > 1;         // → false
i = 1 < 1;         // → false
i = 1 >= 1;        // → true
i = 1 <= 1;        // → true
i = true && false; // → false
i = true || false; // → true

// ----------------------------------------------------------------------------

// ビット演算
i = ~2;         // → -3
i = 1 & 2;      // → 0
i = 1 | 2;      // → 3
i = 1 ^ 2;      // → 3
i =  100 << 2;  // → 400
i = -100 << 2;  // → -400
i =  100 >> 2;  // → 25
i = -100 >> 2;  // → -25
i =  100 >>> 2; // → 25
i = -100 >>> 2; // → 1073741799

// ----------------------------------------------------------------------------

// その他、比較的よく利用する演算子
console.log(+1);                  // → 1
console.log(+'1');                // → 1
console.log(-1);                  // → -1
console.log(-'-1');               // → 1
console.log(typeof 0);            // → number
console.log([] instanceof Array); // → true
console.log(true ? '真' : '偽');  // → 真
i = {foo: 'foo', bar: 'bar'};
delete i.foo;
console.log(i); // → {bar: 'bar'}

